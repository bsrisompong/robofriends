{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","name","email","username","id","className","alt","src","CardList","robots","map","item","key","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundry","state","hasError","error","info","console","log","this","setState","role","aria-label","props","children","Component","App","onSearchChange","event","search","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"2OAeeA,EAbF,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAgBC,GAAqB,EAA/BC,SAA+B,EAArBD,OACtBE,EAD2C,2CAC3CA,GACR,OACE,yBAAKC,UAAU,oDACb,yBAAKC,IAAI,SAASC,IAAG,8BAAyBH,KAC9C,6BACE,4BAAKH,GACL,2BAAIC,MCIGM,EAVS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzB,OACE,6BACGA,EAAOC,KAAI,SAAAC,GAAI,OACd,kBAAC,EAAD,eAAMC,IAAKD,EAAKP,IAAQO,SCQjBE,EAbU,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC1B,OACE,yBAAKT,UAAU,OACb,2BACEA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCcHI,E,4MAnBXC,MAAQ,CACJC,UAAU,G,gEAGIC,EAAOC,GACrBC,QAAQC,IAAI,CAAEH,QAAOC,SACrBG,KAAKC,SAAS,CAAEN,UAAU,M,+BAI1B,OAAIK,KAAKN,MAAMC,SACJ,4BAAI,0BAAMO,KAAK,MAAMC,aAAW,IAA5B,gBAAJ,8BAGPH,KAAKI,MAAMC,a,GAfIC,aCiDZC,G,8DA5Cb,aAAe,IAAD,8BACZ,gBAkBFC,eAAiB,SAAAC,GAEf,EAAKR,SAAS,CAAES,OAAQD,EAAME,OAAOC,SAnBrC,EAAKlB,MAAQ,CACXV,OAAQ,GACR0B,OAAQ,IAJE,E,gEAQO,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJnB,QAAQC,IAAI,CAAEkB,UACd,EAAKhB,SAAS,CAAEjB,OAAQiC,S,+BAWpB,IAAD,OACDC,EAAiBlB,KAAKN,MAAMV,OAAOmC,QAAO,SAAAjC,GAC9C,OAAOA,EAAKV,KAAK4C,cAAcC,SAAS,EAAK3B,MAAMgB,OAAOU,kBAE5D,OAAiC,IAA7BpB,KAAKN,MAAMV,OAAOsC,OACb,uCAGP,yBAAK1C,UAAU,MACb,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWS,aAAcW,KAAKQ,iBAC9B,kBAAC,EAAD,KAEE,kBAAC,EAAD,CAAUxB,OAAQkC,U,GAtCVZ,cCDlBiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.12cdda85.chunk.js","sourcesContent":["import React from 'react'\n\nconst Card = ({ name, username, email, ...rest }) => {\n  const { id } = rest\n  return (\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img alt=\"robots\" src={`http://robohash.org/${id}`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\n\nexport const CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map(item => (\n        <Card key={item.id} {...item} />\n      ))}\n    </div>\n  )\n}\n\nexport default CardList\n","import React from 'react'\n\nexport const SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  )\n}\n\nexport default SearchBox\n","import React, { Component } from 'react'\n\n\nclass ErrorBoundry extends Component {\n    state = {\n        hasError: false\n    }\n\n    componentDidCatch(error, info) {\n        console.log({ error, info })\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1><span role=\"img\" aria-label=\"\">ðŸ˜µ</span>Ooooooop, that's not good.</h1>\n        }\n        return (\n            this.props.children\n        )\n    }\n}\n\nexport default ErrorBoundry","import React, { Component } from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\n// import { robots } from './robots'\nimport ErrorBoundry from '../components/ErrorBoundry'\nimport 'tachyons'\nimport './App.css'\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      search: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => {\n        console.log({ users })\n        this.setState({ robots: users })\n      });\n\n  }\n\n  // onSearchChange(event) {\n  onSearchChange = event => {\n    // arrow function make this bound to its parent\n    this.setState({ search: event.target.value })\n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter(item => {\n      return item.name.toLowerCase().includes(this.state.search.toLowerCase())\n    })\n    if (this.state.robots.length === 0) {\n      return <h1>Loading</h1>\n    }\n    return (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <ErrorBoundry>\n\n          <CardList robots={filteredRobots} />\n        </ErrorBoundry>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './containers/App'\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}